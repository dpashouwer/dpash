devtools::use_package("tidyverse")
devtools::use_package("dplyr")
usethis::use_package("dplyr")
usethis::use_package("janitor")
usethis::use_package("broom")
usethis::use_package("purrr")
?hello
fit_lm_tidies_estimates_w_stars <- function(dat, formula){
dat %>%
as.data.frame() %>%
lm(formula = formula) %>%
tidy() %>%
mutate(stars = case_when(p.value < .001 ~ "***",
p.value >= .001 & p.value < .01 ~ "**",
p.value >= .01 & p.value < .05 ~ "*",
TRUE ~ ""),
estimate_w_stars = paste0(round(estimate, digits = 2), stars)) %>%
select(-stars)
}
fit_lm_tidy_w_stars <- function(dat, formula){
dat %>%
as.data.frame() %>%
lm(formula = formula) %>%
tidy() %>%
mutate(stars = case_when(p.value < .001 ~ "***",
p.value >= .001 & p.value < .01 ~ "**",
p.value >= .01 & p.value < .05 ~ "*",
TRUE ~ ""),
estimate_w_stars = paste0(round(estimate, digits = 2), stars)) %>%
select(-stars)
}
devtools::document()
devtools::document()
fit_lm_tidy_w_stars <- function(dat, formula){
dat %>%
as.data.frame() %>%
lm(formula = formula) %>%
tidy() %>%
mutate(stars = case_when(p.value < .001 ~ "***",
p.value >= .001 & p.value < .01 ~ "**",
p.value >= .01 & p.value < .05 ~ "*",
TRUE ~ ""),
estimate_w_stars = paste0(round(estimate, digits = 2), stars)) %>%
select(-stars)
}
devtools::load_all(".")
devtools::load_all("fit_models.R")
devtools::load_all("fit_models")
devtools::load_all(".")
install.packages("yaml")
devtools::load_all(".")
install.packages("rlang")
devtools::load_all(".")
install.packages("fs")
devtools::load_all(".")
install.packages("glue")
devtools::load_all(".")
devtools::load_all(".")
usethis::use_package("dplyr")
install.packages("dplyr")
usethis::use_package("dplyr")
usethis::use_package("modelr")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(roxygen2)
library(dpash)
devtools::load_all(".")
devtools::check()
devtools::check()
library(dpash)
devtools::check()
devtools::check()
library(migrattr)
devtools::check()
usethis::use_package(magrittr)
devtools::load_all(".")
usethis::use_package(magrittr)
devtools::check()
devtools::check()
devtools::check()
devtools::check()
usethis::use_mit_license()
usethis::use_mit_license(name = "Dustin Pashouwer")
devtools::check()
devtools::check()
devtools::load_all(".")
library(dpash)
devtools::load_all(".")
devtools::check()
devtools::check()
?lm
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(dpash)
devtools::load_all(".")
document()
devtools::document()
devtools::document()
devtools::load_all()
devtools::install()
devtools::install()
dpash::tabyl_ms_stacked_bar
#' Pull Formidable Entries
#'
#' @param url
#' @param my_username
#' @param my_password
#'
#' @return
#' @export
#'
#' @examples
pull_formidable_entries <- function(url, my_username, my_password, page_size = 500){
# loop to pull and bind multiple pages
page <- 1
all_entries <- GET(url = paste0(url, "entries?page_size=", page_size, "/&page=", page), config = authenticate(my_username, my_password)) %>%
content("text") %>%
as.tbl_json() %>%
gather_keys()
next_page <- TRUE
while(next_page){
page <- page + 1
message("Retrieving page: ", page)
# pull data from website
page_data <- GET(url = paste0(url, "entries?page_size=", page_size, "/&page=", page), config = authenticate(my_username, my_password)) %>%
content("text")
# test if it's empty
if(page_data == "[]"){
next_page <- FALSE
} else {
# make tbl_json
page_data <- page_data %>%
as.tbl_json() %>%
gather_keys()
# bind to all_entries
all_entries <- rbind_tbl_json(all_entries, page_data)
}
}
}
usethis::use_package(httr)
usethis::use_package("httr")
usethis::use_package("tidyjson")
usethis::use_package("dplyr")
library(dpash)
devtools::load_all(".")
dpash::pull_formidable_entries()
usethis::use_package("magrittr")
library(dpash)
devtools::load_all(".")
library(dpash)
library(dpash)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(dpash)
dpash::pull_formidable_entries()
library(dpash)
pull_formidable_entries()
usethis::use_package("tidyverse")
#' bind json pages together using tidyjson
#'
#' @param x
#' @param y
#'
#' @return
#' @export
#'
#' @examples
rbind_tbl_json <- function(x, y) {
tbl_json(
bind_rows(x %>% unclass, y %>% unclass),
c(attr(x, "JSON"), attr(y, "JSON"))
)
}
library(dpash)
devtools::load_all(".")
library(dpash)
dpash::pull_formidable_entries
devtools::document()
devtools::document()
?clean_names
devtools::load_all(".")
dpash::pull_formidable_entries
dpash:::rbind_tbl_json
url <- "https://tntp.me/fresno/wp-json/frm/v2/forms/8/"
my_username <- "tntpformidableuser"
my_password <- "fXJ4kSnWXmfEXTE4KVMuRPIO"
dpash::pull_formidable_entries(url, my_username, my_password)
devtools::load_all(".")
library(dpash)
url <- "https://tntp.me/fresno/wp-json/frm/v2/forms/8/"
my_username <- "tntpformidableuser"
my_password <- "fXJ4kSnWXmfEXTE4KVMuRPIO"
dpash::pull_formidable_entries(url, my_username, my_password)
devtools::document()
devtools::install()
library(dpash)
# Load packages - first pacman, installing if necessary, then others
if (!require("pacman")) install.packages("pacman"); library(pacman)
p_load(devtools, readxl, janitor, tidyverse, tidymodels, lubridate) # add more here as needed
url <- "https://tntp.me/fresno/wp-json/frm/v2/forms/8/"
my_username <- "tntpformidableuser"
my_password <- "fXJ4kSnWXmfEXTE4KVMuRPIO"
dpash::pull_formidable_entries(url, my_username, my_password)
devtools::document()
devtools::install()
source('~/.active-rstudio-document')
devtools::check()
source('~/GitHub/dpash/R/test pull_formidable_entries.R')
?bind_rows
document()
devtools::document()
library(dpash)
document()
# Load packages - first pacman, installing if necessary, then others
if (!require("pacman")) install.packages("pacman"); library(pacman)
p_load(devtools, readxl, janitor, tidyverse, tidymodels, lubridate) # add more here as needed
if(!require("dpash")) devtools::install_github("dpashouwer/dpash", force = TRUE); p_load(dpash)
url <- "https://tntp.me/fresno/wp-json/frm/v2/forms/8/"
my_username <- "tntpformidableuser"
my_password <- "fXJ4kSnWXmfEXTE4KVMuRPIO"
dpash::pull_formidable_entries(url, my_username, my_password)
page <- 1
page_size = 500
all_entries <- httr::GET(url = paste0(url, "entries?page_size=", page_size, "&page=", page), config = httr::authenticate(my_username, my_password)) %>%
httr::content("text") %>%
tidyjson::as.tbl_json() %>%
tidyjson::gather_keys()
library(magrittr)
all_entries <- httr::GET(url = paste0(url, "entries?page_size=", page_size, "&page=", page), config = httr::authenticate(my_username, my_password)) %>%
httr::content("text") %>%
tidyjson::as.tbl_json() %>%
tidyjson::gather_keys()
all_entries <- httr::GET(url = paste0(url, "entries?page_size=", page_size, "&page=", page), config = httr::authenticate(my_username, my_password)) %>%
httr::content("text")
url <- "https://tntp.me/fresno/wp-json/frm/v2/forms/8/"
all_entries <- httr::GET(url = paste0(url, "entries?page_size=", page_size, "&page=", page), config = httr::authenticate(my_username, my_password)) %>%
httr::content("text")
my_username <- "tntpformidableuser"
my_password <- "fXJ4kSnWXmfEXTE4KVMuRPIO"
all_entries <- httr::GET(url = paste0(url, "entries?page_size=", page_size, "&page=", page), config = httr::authenticate(my_username, my_password)) %>%
httr::content("text")
all_entries
all_entries <- httr::GET(url = paste0(url, "entries?page_size=", page_size, "&page=", page), config = httr::authenticate(my_username, my_password)) %>%
httr::content("text") %>%
tidyjson::as.tbl_json()
all_entries
all_entries <- httr::GET(url = paste0(url, "entries?page_size=", page_size, "&page=", page), config = httr::authenticate(my_username, my_password)) %>%
httr::content("text") %>%
tidyjson::as.tbl_json() %>%
tidyjson::gather_keys()
